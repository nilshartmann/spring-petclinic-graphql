on:
  - push

jobs:
  petclinic-graphiql:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./petclinic-graphiql

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install
      - name: Build application
        run: pnpm build
      - name: Patch index.html
        run: pnpm patch-index-html
      - name: show patched index.html
        run: cat dist/index.html
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: graphiql-dist
          path: ./petclinic-graphiql/dist/**
          retention-days: 1

  backend:
    runs-on: ubuntu-latest
    needs: petclinic-graphiql
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install JDK17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Clear embedded graphiql
        run: rm -rf backend/src/main/resources/graphiql
      - name: Download graphiql
        uses: actions/download-artifact@v3
        with:
          name: graphiql-dist
          path: backend/src/main/resources/graphiql
      - name: show graphiql artifact
        run: ls -lR backend/src/main/resources/
      - name: Build with maven
        run: mvn -B package
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: petclinic-backend-jar
          path: ./backend/target/backend-0.0.1-SNAPSHOT.jar
          retention-days: 1

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install
#      - name: Run Codegen
#        run: pnpm run codegen
      - name: Code checks
        run: pnpm run check
      - name: Build application
        run: pnpm build
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: ./frontend/dist/**
          retention-days: 1

  end-to-end-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [petclinic-graphiql,backend,frontend]
    steps:
      - name: setup playwright
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Download backend artifacts
        uses: actions/download-artifact@v3
        with:
          name: petclinic-backend-jar
          path: petclinic-backend-jar
      - name: Download frontend artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: frontend-dist
      - name: LS
        run: ls -lR
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        working-directory: ./e2e-tests
        run: pnpm install
      - name: Install Playwright Browsers
        working-directory: ./e2e-tests
        run: pnpm exec playwright install --with-deps
      - name: Install JDK17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - uses: JarvusInnovations/background-action@v1
        name: Run Backend
        with:
          run: java -jar backend-0.0.1-SNAPSHOT.jar &
          wait-on: |
            http-get://localhost:9977
          tail: true # true = stderr,stdout
          log-output-resume: stderr
          wait-for: 5m
          log-output: stderr,stdout # same as true
          log-output-if: true
          working-directory: ./petclinic-backend-jar
      - name: install serve
        run: npm install -g serve
        working-directory: ./frontend-dist
      - uses: JarvusInnovations/background-action@v1
        name: Run frontend
        with:
          run: serve --single -l 3080 &
          wait-on: |
            http-get://localhost:3080
          tail: true # true = stderr,stdout
          log-output-resume: stderr
          wait-for: 5m
          log-output: stderr,stdout # same as true
          log-output-if: true
          working-directory: ./frontend-dist
      - name: Run Playwright tests
        working-directory: ./e2e-tests
        run: pnpm exec playwright test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
         name: PlayWright Test            # Name of the check run which will be created
         path: e2e-tests/test-results.xml    # Path to test results
         reporter: java-junit        # Format of test results
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./e2e-tests/playwright-report/
          retention-days: 2
